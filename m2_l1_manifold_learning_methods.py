# -*- coding: utf-8 -*-
"""M2_L1_Manifold Learning Methods.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yj1pa9EF61xmQg3e01R0AFKNMr3zUPs9
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

minutes = np.arange(0, 31, 1)
values = [1000, 997, 992, 982, 978, 975, 980, 985, 990, 995]
series = np.interp(minutes, np.linspace(0, 30, len(values)), values)
df = pd.DataFrame({"Minute": minutes, "IndexValue": series})

plt.figure(figsize=(10,5))
plt.plot(df["Minute"], df["IndexValue"], marker="o")
plt.title("Simulated Freight Index Reaction to Fake News")
plt.xlabel("Minutes after fake post")
plt.ylabel("Index Value")
plt.grid(True)
plt.show()

df.head(10)

from datetime import datetime

fig, ax = plt.subplots(figsize=(8,3))
user = "LocalFlashNews"
handle = "@localflashnews"
text = "üö® BREAKING: Massive explosion reported at Bayport Container Terminal. \
Port operations halted. Local authorities responding. More updates soon."
time_posted = datetime.now().strftime("%H:%M ¬∑ %d %b %Y")

ax.axis("off")
ax.text(0.05, 0.8, f"{user}  {handle}", fontsize=12, fontweight="bold")
ax.text(0.05, 0.6, text, wrap=True, fontsize=11)
ax.text(0.05, 0.2, time_posted, fontsize=9, color="gray")
ax.text(0.7, 0.05, "‚ù§Ô∏è 1.2K   üîÅ 3.4K", fontsize=10)

plt.show()

!pip install diffusers transformers accelerate safetensors

from diffusers import StableDiffusionPipeline
import torch

pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    torch_dtype=torch.float16
)
pipe = pipe.to("cuda")

prompt = "Aerial view of a commercial shipping port at dawn, large orange explosion with smoke plume, cranes in foreground, realistic, high detail, 16:9"
image = pipe(prompt, num_inference_steps=25).images[0]
image.save("fake_port_explosion.png")
image.show()

quiz = {
    "Q1": {
        "question": "You see one photo of an explosion at a port. What‚Äôs the best first step?",
        "options": ["A: Share immediately", "B: Wait for confirmation from official source"],
        "answer": "B"
    },
    "Q2": {
        "question": "Which is a red flag of AI-generated images?",
        "options": ["A: Clean edges and sharp lines", "B: Inconsistent shadows or duplicated textures"],
        "answer": "B"
    }
}

for qid, qdata in quiz.items():
    print("\n", qdata["question"])
    for opt in qdata["options"]:
        print(" ", opt)
    print("Correct Answer:", qdata["answer"])

